{"ast":null,"code":"\"use strict\";\n\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Gaxios = void 0;\nconst extend_1 = __importDefault(require(\"extend\"));\nconst https_1 = require(\"https\");\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\nconst querystring_1 = __importDefault(require(\"querystring\"));\nconst is_stream_1 = __importDefault(require(\"is-stream\"));\nconst url_1 = require(\"url\");\nconst common_1 = require(\"./common\");\nconst retry_1 = require(\"./retry\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fetch = hasFetch() ? window.fetch : node_fetch_1.default;\nfunction hasWindow() {\n  return typeof window !== 'undefined' && !!window;\n}\nfunction hasFetch() {\n  return hasWindow() && !!window.fetch;\n}\nfunction hasBuffer() {\n  return typeof Buffer !== 'undefined';\n}\nfunction hasHeader(options, header) {\n  return !!getHeader(options, header);\n}\nfunction getHeader(options, header) {\n  header = header.toLowerCase();\n  for (const key of Object.keys((options === null || options === void 0 ? void 0 : options.headers) || {})) {\n    if (header === key.toLowerCase()) {\n      return options.headers[key];\n    }\n  }\n  return undefined;\n}\nlet HttpsProxyAgent;\nfunction loadProxy() {\n  const proxy = process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy;\n  if (proxy) {\n    HttpsProxyAgent = require('https-proxy-agent');\n  }\n  return proxy;\n}\nloadProxy();\nfunction skipProxy(url) {\n  var _a;\n  const noProxyEnv = (_a = process.env.NO_PROXY) !== null && _a !== void 0 ? _a : process.env.no_proxy;\n  if (!noProxyEnv) {\n    return false;\n  }\n  const noProxyUrls = noProxyEnv.split(',');\n  const parsedURL = new url_1.URL(url);\n  return !!noProxyUrls.find(url => {\n    if (url.startsWith('*.') || url.startsWith('.')) {\n      url = url.replace(/^\\*\\./, '.');\n      return parsedURL.hostname.endsWith(url);\n    } else {\n      return url === parsedURL.origin || url === parsedURL.hostname;\n    }\n  });\n}\n// Figure out if we should be using a proxy. Only if it's required, load\n// the https-proxy-agent module as it adds startup cost.\nfunction getProxy(url) {\n  // If there is a match between the no_proxy env variables and the url, then do not proxy\n  if (skipProxy(url)) {\n    return undefined;\n    // If there is not a match between the no_proxy env variables and the url, check to see if there should be a proxy\n  } else {\n    return loadProxy();\n  }\n}\nclass Gaxios {\n  /**\n   * The Gaxios class is responsible for making HTTP requests.\n   * @param defaults The default set of options to be used for this instance.\n   */\n  constructor(defaults) {\n    this.agentCache = new Map();\n    this.defaults = defaults || {};\n  }\n  /**\n   * Perform an HTTP request with the given options.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  async request() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    opts = this.validateOpts(opts);\n    return this._request(opts);\n  }\n  async _defaultAdapter(opts) {\n    const fetchImpl = opts.fetchImplementation || fetch;\n    const res = await fetchImpl(opts.url, opts);\n    const data = await this.getResponseData(opts, res);\n    return this.translateResponse(opts, res, data);\n  }\n  /**\n   * Internal, retryable version of the `request` method.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  async _request() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      let translatedResponse;\n      if (opts.adapter) {\n        translatedResponse = await opts.adapter(opts, this._defaultAdapter.bind(this));\n      } else {\n        translatedResponse = await this._defaultAdapter(opts);\n      }\n      if (!opts.validateStatus(translatedResponse.status)) {\n        throw new common_1.GaxiosError(`Request failed with status code ${translatedResponse.status}`, opts, translatedResponse);\n      }\n      return translatedResponse;\n    } catch (e) {\n      const err = e;\n      err.config = opts;\n      const {\n        shouldRetry,\n        config\n      } = await retry_1.getRetryConfig(e);\n      if (shouldRetry && config) {\n        err.config.retryConfig.currentRetryAttempt = config.retryConfig.currentRetryAttempt;\n        return this._request(err.config);\n      }\n      throw err;\n    }\n  }\n  async getResponseData(opts, res) {\n    switch (opts.responseType) {\n      case 'stream':\n        return res.body;\n      case 'json':\n        {\n          let data = await res.text();\n          try {\n            data = JSON.parse(data);\n          } catch (_a) {\n            // continue\n          }\n          return data;\n        }\n      case 'arraybuffer':\n        return res.arrayBuffer();\n      case 'blob':\n        return res.blob();\n      default:\n        return res.text();\n    }\n  }\n  /**\n   * Validates the options, and merges them with defaults.\n   * @param opts The original options passed from the client.\n   */\n  validateOpts(options) {\n    const opts = extend_1.default(true, {}, this.defaults, options);\n    if (!opts.url) {\n      throw new Error('URL is required.');\n    }\n    // baseUrl has been deprecated, remove in 2.0\n    const baseUrl = opts.baseUrl || opts.baseURL;\n    if (baseUrl) {\n      opts.url = baseUrl + opts.url;\n    }\n    opts.paramsSerializer = opts.paramsSerializer || this.paramsSerializer;\n    if (opts.params && Object.keys(opts.params).length > 0) {\n      let additionalQueryParams = opts.paramsSerializer(opts.params);\n      if (additionalQueryParams.startsWith('?')) {\n        additionalQueryParams = additionalQueryParams.slice(1);\n      }\n      const prefix = opts.url.includes('?') ? '&' : '?';\n      opts.url = opts.url + prefix + additionalQueryParams;\n    }\n    if (typeof options.maxContentLength === 'number') {\n      opts.size = options.maxContentLength;\n    }\n    if (typeof options.maxRedirects === 'number') {\n      opts.follow = options.maxRedirects;\n    }\n    opts.headers = opts.headers || {};\n    if (opts.data) {\n      const isFormData = typeof FormData === 'undefined' ? false : (opts === null || opts === void 0 ? void 0 : opts.data) instanceof FormData;\n      if (is_stream_1.default.readable(opts.data)) {\n        opts.body = opts.data;\n      } else if (hasBuffer() && Buffer.isBuffer(opts.data)) {\n        // Do not attempt to JSON.stringify() a Buffer:\n        opts.body = opts.data;\n        if (!hasHeader(opts, 'Content-Type')) {\n          opts.headers['Content-Type'] = 'application/json';\n        }\n      } else if (typeof opts.data === 'object') {\n        // If www-form-urlencoded content type has been set, but data is\n        // provided as an object, serialize the content using querystring:\n        if (!isFormData) {\n          if (getHeader(opts, 'content-type') === 'application/x-www-form-urlencoded') {\n            opts.body = opts.paramsSerializer(opts.data);\n          } else {\n            // } else if (!(opts.data instanceof FormData)) {\n            if (!hasHeader(opts, 'Content-Type')) {\n              opts.headers['Content-Type'] = 'application/json';\n            }\n            opts.body = JSON.stringify(opts.data);\n          }\n        }\n      } else {\n        opts.body = opts.data;\n      }\n    }\n    opts.validateStatus = opts.validateStatus || this.validateStatus;\n    opts.responseType = opts.responseType || 'json';\n    if (!opts.headers['Accept'] && opts.responseType === 'json') {\n      opts.headers['Accept'] = 'application/json';\n    }\n    opts.method = opts.method || 'GET';\n    const proxy = getProxy(opts.url);\n    if (proxy) {\n      if (this.agentCache.has(proxy)) {\n        opts.agent = this.agentCache.get(proxy);\n      } else {\n        // Proxy is being used in conjunction with mTLS.\n        if (opts.cert && opts.key) {\n          const parsedURL = new url_1.URL(proxy);\n          opts.agent = new HttpsProxyAgent({\n            port: parsedURL.port,\n            host: parsedURL.host,\n            protocol: parsedURL.protocol,\n            cert: opts.cert,\n            key: opts.key\n          });\n        } else {\n          opts.agent = new HttpsProxyAgent(proxy);\n        }\n        this.agentCache.set(proxy, opts.agent);\n      }\n    } else if (opts.cert && opts.key) {\n      // Configure client for mTLS:\n      if (this.agentCache.has(opts.key)) {\n        opts.agent = this.agentCache.get(opts.key);\n      } else {\n        opts.agent = new https_1.Agent({\n          cert: opts.cert,\n          key: opts.key\n        });\n        this.agentCache.set(opts.key, opts.agent);\n      }\n    }\n    return opts;\n  }\n  /**\n   * By default, throw for any non-2xx status code\n   * @param status status code from the HTTP response\n   */\n  validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n  /**\n   * Encode a set of key/value pars into a querystring format (?foo=bar&baz=boo)\n   * @param params key value pars to encode\n   */\n  paramsSerializer(params) {\n    return querystring_1.default.stringify(params);\n  }\n  translateResponse(opts, res, data) {\n    // headers need to be converted from a map to an obj\n    const headers = {};\n    res.headers.forEach((value, key) => {\n      headers[key] = value;\n    });\n    return {\n      config: opts,\n      data: data,\n      headers,\n      status: res.status,\n      statusText: res.statusText,\n      // XMLHttpRequestLike\n      request: {\n        responseURL: res.url\n      }\n    };\n  }\n}\nexports.Gaxios = Gaxios;","map":{"version":3,"mappings":"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","names":["fetch","hasFetch","window","node_fetch_1","hasWindow","hasBuffer","Buffer","hasHeader","options","header","getHeader","toLowerCase","key","Object","keys","headers","undefined","HttpsProxyAgent","loadProxy","proxy","process","env","HTTPS_PROXY","https_proxy","HTTP_PROXY","http_proxy","require","skipProxy","url","noProxyEnv","NO_PROXY","no_proxy","noProxyUrls","split","parsedURL","url_1","find","startsWith","replace","hostname","endsWith","origin","getProxy","Gaxios","constructor","defaults","Map","request","opts","validateOpts","_request","_defaultAdapter","fetchImpl","fetchImplementation","res","data","getResponseData","translateResponse","translatedResponse","adapter","bind","validateStatus","status","common_1","e","err","config","shouldRetry","retry_1","retryConfig","currentRetryAttempt","responseType","body","text","JSON","parse","arrayBuffer","blob","extend_1","Error","baseUrl","baseURL","paramsSerializer","params","length","additionalQueryParams","slice","prefix","includes","maxContentLength","size","maxRedirects","follow","isFormData","FormData","is_stream_1","readable","isBuffer","stringify","method","agentCache","has","agent","get","cert","port","host","protocol","set","https_1","querystring_1","forEach","value","statusText","responseURL","exports"],"sources":["../../src/gaxios.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}